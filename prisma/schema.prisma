// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id
  name String
  email String @unique
  password String
  passwordResetToken  String?
  passwordResetExpires DateTime?
  profile_image String?
  is_admin Boolean?
  favorites  Favorite[]
  

   @@map("users")
}

model Category {
  id String @id
  category_name String
  cover_image String?
  categories SubCategorie[]

   @@map("category")
}

model SubCategorie {
  id String @id
  item_name String
  cover_image String?
  categoryId String
  category Category @relation(fields: [categoryId], references: [id],onDelete: Cascade)
  stickers Sticker[]

   @@map("categories")
}

model Sticker {
  id String @id
  figure_image String?
  sub_category SubCategorie @relation(fields: [subCategoryId], references: [id],onDelete: Cascade)
  subCategoryId String
  favorites    Favorite[]

  @@map("figures")
}

model Favorite {
  id         String   @id @default(uuid())
  userId     String
  stickerId  String
  user       User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  sticker    Sticker  @relation(fields: [stickerId], references: [id],onDelete: Cascade)

  @@unique([userId, stickerId])
}